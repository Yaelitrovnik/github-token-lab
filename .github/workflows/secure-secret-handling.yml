# .github/workflows/secure-secret-handling.yml
name: Advanced Secret Handling

on:
  workflow_dispatch:

jobs:
  validate-and-mask:
    runs-on: ubuntu-latest
    steps:
      - name: Validate secret format
        id: validate
        run: |
          # Example: Validate that API_KEY has the expected format (starts with "sk_")
          if [[ "$API_KEY" != sk_* ]]; then
            echo "API_KEY does not have the expected format"
            exit 1
          fi
          
          # Validate API_KEY length
          if [[ ${#API_KEY} -lt 20 ]]; then
            echo "API_KEY is too short to be valid"
            exit 1
          fi
          
          echo "API_KEY validated successfully"
          
          # Create a masked version for safe display
          # GitHub automatically masks secrets, but this is an example of custom masking
          MASKED_KEY="${API_KEY:0:4}...${API_KEY: -4}"
          echo "masked_key=$MASKED_KEY" >> $GITHUB_OUTPUT
        env:
          API_KEY: ${{ secrets.API_KEY }}
      
      - name: Use validated secret
        run: |
          echo "Using validated API_KEY with prefix: ${API_KEY:0:4}..."
          echo "Masked version: ${{ steps.validate.outputs.masked_key }}"
          
          # Safely use the validated secret
        env:
          API_KEY: ${{ secrets.API_KEY }}
      
      - name: Demo additional masking
        run: |
          # Additional sensitive information generated during workflow
          # Use add-mask to ensure it doesn't appear in logs
          TEMP_TOKEN=$(openssl rand -hex 16)
          echo "::add-mask::$TEMP_TOKEN"
          
          echo "Generated token (should be masked): $TEMP_TOKEN"
          echo "Only the masked version is visible in logs"
