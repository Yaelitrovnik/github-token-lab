# .github/workflows/use-secrets.yml
name: Use Repository Secrets

on:
  push:
    branches: [ master ]

jobs:
  access-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Access Secret as Environment Variable
        run: |
          # The value is not printed, just the fact that it exists
          if [[ -n "$API_KEY" ]]; then
            echo "API_KEY is set and has length: ${#API_KEY}"
          else
            echo "API_KEY is not set"
            exit 1
          fi
        env:
          API_KEY: ${{ secrets.API_KEY }}
      
      - name: Use Secret with External API
        run: |
          # Example of how to use a secret with an external API
          # This doesn't actually call an API - it's just an example
          echo "Making secure API call..."
          # curl -s -H "Authorization: Bearer $API_KEY" https://api.example.com/data
          # Instead of actually making the call, we just simulate it
          echo "API call completed successfully"
        env:
          API_KEY: ${{ secrets.API_KEY }}
      
      - name: Pass Secret to an Action
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Log a message - note that we're NOT logging the secret
            core.info('Using secrets securely in JavaScript actions');
            
            // Example of accessing another secret in a JavaScript action
            // Note: This doesn't actually log the secret - just checks it exists
            const apiKey = process.env.API_KEY;
            core.info(`API_KEY exists: ${apiKey.length > 0}`);
        env:
          API_KEY: ${{ secrets.API_KEY }}
